{"version":3,"file":"static/webpack/static\\development\\pages\\payPage.js.95948a00f05c8fa39576.hot-update.js","sources":["webpack:///./pages/payPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport { Loader } from './src/components/Loader';\r\nimport { Popup } from './src/components/Popup';\r\nimport { Button } from './src/components/Button';\r\nimport styled from 'styled-components';\r\nimport { useRouter } from 'next/router'\r\nimport Router from 'next/router';\r\nimport {GlobalStyle} from './src/theme/globalStyle';\r\n//props: {match: {params: {name: string}}}\r\n\r\nexport default function PayPage() {\r\n    React.useState();\r\n    const router = useRouter();\r\n\r\n    const [operator, setOperator] = useState('');\r\n    const [isLoaderShow, setLoaderShow] = useState(false);\r\n    const [apiStatus, setApiStatus] = useState('');\r\n    console.log(isLoaderShow);\r\n    useEffect(() => {\r\n        // const { router: { query: { id } }} = this.props;\r\n        // const { name } = props.match.params;\r\n        if (router.query.title) {\r\n            const name = '' + router.query.title;\r\n            setOperator(name); \r\n        } else {\r\n            routerPushHome();\r\n        }\r\n\r\n    },[])\r\n\r\n    const changeLoaderState = (newIsShownState: boolean) => {\r\n        setLoaderShow(newIsShownState);\r\n    }\r\n    const changePopupState = (newApiStatus: string) => {\r\n        setApiStatus(newApiStatus);\r\n    }\r\n    const resetPopupState = () => {\r\n        changePopupState('');\r\n        routerPushHome();\r\n    }\r\n\r\n    const routerPushHome = () => {\r\n        Router.push('/');\r\n    }\r\n\r\n    const handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        const responseTime: number = Math.round(Math.random() * 5) * 1000;\r\n        changeLoaderState(true);\r\n        new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                Math.round(Math.random()) ? resolve() : reject(new Error())\r\n            }, responseTime)\r\n        })\r\n        .then(\r\n            result => {\r\n                changeLoaderState(false);\r\n                changePopupState('success');\r\n            },\r\n            error => {\r\n                changeLoaderState(false);\r\n                changePopupState('error');\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        <PayForm>\r\n            <GlobalStyle />\r\n            <Loader isShown = {isLoaderShow}/>\r\n            <Popup\r\n                apiStatus = {apiStatus}\r\n                resetPopupState={resetPopupState}    \r\n            />\r\n            <Header>\r\n                Pay for {operator} \r\n            </Header>\r\n            <form onSubmit={handleSubmit}>\r\n                <p>Please enter phone number</p>\r\n                <InputMask\r\n                    id=\"phoneNumber\"\r\n                    type=\"tel\"\r\n                    placeholder=\"Phone number\" \r\n                    name=\"phone\"\r\n                    pattern=\"^\\+7 \\(\\d{3}\\) \\d{3} \\d{2} \\d{2}$\"\r\n                    title=\"+7 (999) 999 99 99\"\r\n                    mask=\"+7 (999) 999 99 99\"\r\n                    required\r\n                />\r\n                <p>Please enter payment amount</p>\r\n                <InputMask\r\n                    id=\"paymentAmount\"\r\n                    type=\"num\"\r\n                    placeholder=\"Payment amount\" \r\n                    name=\"money\"\r\n                    pattern=\"^\\d{1,3}$|^1000$\"\r\n                    title=\"from 1 to 1000\"\r\n                    mask=\"9999\"\r\n                    maskChar=\"\"\r\n                    required\r\n                />\r\n                <Button type=\"submit\">Continue</Button>\r\n            </form>\r\n        </PayForm>\r\n    )\r\n};\r\n\r\nconst PayForm = styled.div`\r\n    background-color: white;\r\n    border: 2px solid black;\r\n    padding: 15px;\r\n    border-radius: 3px;\r\n    display: flex;\r\n    align-content: center;\r\n    flex-direction: column;\r\n\r\n`\r\nconst Header = styled.h1`\r\n    align-self: center;\r\n    color: palevioletred;\r\n`"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}